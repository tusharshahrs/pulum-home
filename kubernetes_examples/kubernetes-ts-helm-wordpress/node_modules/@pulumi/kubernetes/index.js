"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
// Export members:
__export(require("./provider"));
// Export sub-modules:
const admissionregistration = require("./admissionregistration");
exports.admissionregistration = admissionregistration;
const apiextensions = require("./apiextensions");
exports.apiextensions = apiextensions;
const apiregistration = require("./apiregistration");
exports.apiregistration = apiregistration;
const apps = require("./apps");
exports.apps = apps;
const auditregistration = require("./auditregistration");
exports.auditregistration = auditregistration;
const authentication = require("./authentication");
exports.authentication = authentication;
const authorization = require("./authorization");
exports.authorization = authorization;
const autoscaling = require("./autoscaling");
exports.autoscaling = autoscaling;
const batch = require("./batch");
exports.batch = batch;
const certificates = require("./certificates");
exports.certificates = certificates;
const coordination = require("./coordination");
exports.coordination = coordination;
const core = require("./core");
exports.core = core;
const discovery = require("./discovery");
exports.discovery = discovery;
const events = require("./events");
exports.events = events;
const extensions = require("./extensions");
exports.extensions = extensions;
const flowcontrol = require("./flowcontrol");
exports.flowcontrol = flowcontrol;
const helm = require("./helm");
exports.helm = helm;
const kustomize = require("./kustomize");
exports.kustomize = kustomize;
const meta = require("./meta");
exports.meta = meta;
const networking = require("./networking");
exports.networking = networking;
const node = require("./node");
exports.node = node;
const policy = require("./policy");
exports.policy = policy;
const rbac = require("./rbac");
exports.rbac = rbac;
const scheduling = require("./scheduling");
exports.scheduling = scheduling;
const settings = require("./settings");
exports.settings = settings;
const storage = require("./storage");
exports.storage = storage;
const types = require("./types");
exports.types = types;
const yaml = require("./yaml");
exports.yaml = yaml;
const provider_1 = require("./provider");
pulumi.runtime.registerResourcePackage("kubernetes", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:kubernetes") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map