"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__export(require("./daemonSet"));
__export(require("./daemonSetList"));
__export(require("./deployment"));
__export(require("./deploymentList"));
__export(require("./ingress"));
__export(require("./ingressList"));
__export(require("./networkPolicy"));
__export(require("./networkPolicyList"));
__export(require("./podSecurityPolicy"));
__export(require("./podSecurityPolicyList"));
__export(require("./replicaSet"));
__export(require("./replicaSetList"));
// Import resources to register:
const daemonSet_1 = require("./daemonSet");
const daemonSetList_1 = require("./daemonSetList");
const deployment_1 = require("./deployment");
const deploymentList_1 = require("./deploymentList");
const ingress_1 = require("./ingress");
const ingressList_1 = require("./ingressList");
const networkPolicy_1 = require("./networkPolicy");
const networkPolicyList_1 = require("./networkPolicyList");
const podSecurityPolicy_1 = require("./podSecurityPolicy");
const podSecurityPolicyList_1 = require("./podSecurityPolicyList");
const replicaSet_1 = require("./replicaSet");
const replicaSetList_1 = require("./replicaSetList");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:extensions/v1beta1:DaemonSet":
                return new daemonSet_1.DaemonSet(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:DaemonSetList":
                return new daemonSetList_1.DaemonSetList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:Deployment":
                return new deployment_1.Deployment(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:DeploymentList":
                return new deploymentList_1.DeploymentList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:Ingress":
                return new ingress_1.Ingress(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:IngressList":
                return new ingressList_1.IngressList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:NetworkPolicy":
                return new networkPolicy_1.NetworkPolicy(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:NetworkPolicyList":
                return new networkPolicyList_1.NetworkPolicyList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:PodSecurityPolicy":
                return new podSecurityPolicy_1.PodSecurityPolicy(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:PodSecurityPolicyList":
                return new podSecurityPolicyList_1.PodSecurityPolicyList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:ReplicaSet":
                return new replicaSet_1.ReplicaSet(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:ReplicaSetList":
                return new replicaSetList_1.ReplicaSetList(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "extensions/v1beta1", _module);
//# sourceMappingURL=index.js.map