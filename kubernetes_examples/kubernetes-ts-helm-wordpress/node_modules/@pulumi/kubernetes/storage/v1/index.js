"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__export(require("./csidriver"));
__export(require("./csidriverList"));
__export(require("./csinode"));
__export(require("./csinodeList"));
__export(require("./storageClass"));
__export(require("./storageClassList"));
__export(require("./volumeAttachment"));
__export(require("./volumeAttachmentList"));
// Import resources to register:
const csidriver_1 = require("./csidriver");
const csidriverList_1 = require("./csidriverList");
const csinode_1 = require("./csinode");
const csinodeList_1 = require("./csinodeList");
const storageClass_1 = require("./storageClass");
const storageClassList_1 = require("./storageClassList");
const volumeAttachment_1 = require("./volumeAttachment");
const volumeAttachmentList_1 = require("./volumeAttachmentList");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:storage.k8s.io/v1:CSIDriver":
                return new csidriver_1.CSIDriver(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1:CSIDriverList":
                return new csidriverList_1.CSIDriverList(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1:CSINode":
                return new csinode_1.CSINode(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1:CSINodeList":
                return new csinodeList_1.CSINodeList(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1:StorageClass":
                return new storageClass_1.StorageClass(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1:StorageClassList":
                return new storageClassList_1.StorageClassList(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1:VolumeAttachment":
                return new volumeAttachment_1.VolumeAttachment(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1:VolumeAttachmentList":
                return new volumeAttachmentList_1.VolumeAttachmentList(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "storage.k8s.io/v1", _module);
//# sourceMappingURL=index.js.map