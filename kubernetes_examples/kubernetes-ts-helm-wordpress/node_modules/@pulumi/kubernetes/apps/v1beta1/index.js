"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__export(require("./controllerRevision"));
__export(require("./controllerRevisionList"));
__export(require("./deployment"));
__export(require("./deploymentList"));
__export(require("./statefulSet"));
__export(require("./statefulSetList"));
// Import resources to register:
const controllerRevision_1 = require("./controllerRevision");
const controllerRevisionList_1 = require("./controllerRevisionList");
const deployment_1 = require("./deployment");
const deploymentList_1 = require("./deploymentList");
const statefulSet_1 = require("./statefulSet");
const statefulSetList_1 = require("./statefulSetList");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:apps/v1beta1:ControllerRevision":
                return new controllerRevision_1.ControllerRevision(name, undefined, { urn });
            case "kubernetes:apps/v1beta1:ControllerRevisionList":
                return new controllerRevisionList_1.ControllerRevisionList(name, undefined, { urn });
            case "kubernetes:apps/v1beta1:Deployment":
                return new deployment_1.Deployment(name, undefined, { urn });
            case "kubernetes:apps/v1beta1:DeploymentList":
                return new deploymentList_1.DeploymentList(name, undefined, { urn });
            case "kubernetes:apps/v1beta1:StatefulSet":
                return new statefulSet_1.StatefulSet(name, undefined, { urn });
            case "kubernetes:apps/v1beta1:StatefulSetList":
                return new statefulSetList_1.StatefulSetList(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "apps/v1beta1", _module);
//# sourceMappingURL=index.js.map