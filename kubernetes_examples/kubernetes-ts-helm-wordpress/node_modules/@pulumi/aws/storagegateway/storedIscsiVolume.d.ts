import * as pulumi from "@pulumi/pulumi";
/**
 * Manages an AWS Storage Gateway stored iSCSI volume.
 *
 * > **NOTE:** The gateway must have a working storage added (e.g. via the [`aws.storagegateway.WorkingStorage`](https://www.terraform.io/docs/providers/aws/r/storagegateway_working_storage.html) resource) before the volume is operational to clients, however the Storage Gateway API will allow volume creation without error in that case and return volume status as `WORKING STORAGE NOT CONFIGURED`.
 *
 * ## Example Usage
 * ### Create Empty Stored iSCSI Volume
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.storagegateway.StoredIscsiVolume("example", {
 *     gatewayArn: aws_storagegateway_cache.example.gateway_arn,
 *     networkInterfaceId: aws_instance.example.private_ip,
 *     targetName: "example",
 *     preserveExistingData: false,
 *     diskId: data.aws_storagegateway_local_disk.test.id,
 * });
 * ```
 * ### Create Stored iSCSI Volume From Snapshot
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.storagegateway.StoredIscsiVolume("example", {
 *     gatewayArn: aws_storagegateway_cache.example.gateway_arn,
 *     networkInterfaceId: aws_instance.example.private_ip,
 *     snapshotId: aws_ebs_snapshot.example.id,
 *     targetName: "example",
 *     preserveExistingData: false,
 *     diskId: data.aws_storagegateway_local_disk.test.id,
 * });
 * ```
 *
 * ## Import
 *
 * `aws_storagegateway_stored_iscsi_volume` can be imported by using the volume Amazon Resource Name (ARN), e.g.
 *
 * ```sh
 *  $ pulumi import aws:storagegateway/storedIscsiVolume:StoredIscsiVolume example arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678
 * ```
 */
export declare class StoredIscsiVolume extends pulumi.CustomResource {
    /**
     * Get an existing StoredIscsiVolume resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StoredIscsiVolumeState, opts?: pulumi.CustomResourceOptions): StoredIscsiVolume;
    /**
     * Returns true if the given object is an instance of StoredIscsiVolume.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StoredIscsiVolume;
    /**
     * Volume Amazon Resource Name (ARN), e.g. `arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678`.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Whether mutual CHAP is enabled for the iSCSI target.
     */
    readonly chapEnabled: pulumi.Output<boolean>;
    /**
     * The unique identifier for the gateway local disk that is configured as a stored volume.
     */
    readonly diskId: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the gateway.
     */
    readonly gatewayArn: pulumi.Output<string>;
    /**
     * `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Optional.
     */
    readonly kmsEncrypted: pulumi.Output<boolean | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is `true`.
     */
    readonly kmsKey: pulumi.Output<string | undefined>;
    /**
     * Logical disk number.
     */
    readonly lunNumber: pulumi.Output<number>;
    /**
     * The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.
     */
    readonly networkInterfaceId: pulumi.Output<string>;
    /**
     * The port used to communicate with iSCSI targets.
     */
    readonly networkInterfacePort: pulumi.Output<number>;
    /**
     * Specify this field as `true` if you want to preserve the data on the local disk. Otherwise, specifying this field as false creates an empty volume.
     */
    readonly preserveExistingData: pulumi.Output<boolean>;
    /**
     * The snapshot ID of the snapshot to restore as the new stored volume. e.g. `snap-1122aabb`.
     */
    readonly snapshotId: pulumi.Output<string | undefined>;
    /**
     * Key-value mapping of resource tags
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Target Amazon Resource Name (ARN), e.g. `arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/target/iqn.1997-05.com.amazon:TargetName`.
     */
    readonly targetArn: pulumi.Output<string>;
    /**
     * The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.
     */
    readonly targetName: pulumi.Output<string>;
    /**
     * A value that indicates whether a storage volume is attached to, detached from, or is in the process of detaching from a gateway.
     */
    readonly volumeAttachmentStatus: pulumi.Output<string>;
    /**
     * Volume ID, e.g. `vol-12345678`.
     */
    readonly volumeId: pulumi.Output<string>;
    /**
     * The size of the data stored on the volume in bytes.
     */
    readonly volumeSizeInBytes: pulumi.Output<number>;
    /**
     * indicates the state of the storage volume.
     */
    readonly volumeStatus: pulumi.Output<string>;
    /**
     * indicates the type of the volume.
     */
    readonly volumeType: pulumi.Output<string>;
    /**
     * Create a StoredIscsiVolume resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StoredIscsiVolumeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering StoredIscsiVolume resources.
 */
export interface StoredIscsiVolumeState {
    /**
     * Volume Amazon Resource Name (ARN), e.g. `arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/volume/vol-12345678`.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * Whether mutual CHAP is enabled for the iSCSI target.
     */
    readonly chapEnabled?: pulumi.Input<boolean>;
    /**
     * The unique identifier for the gateway local disk that is configured as a stored volume.
     */
    readonly diskId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the gateway.
     */
    readonly gatewayArn?: pulumi.Input<string>;
    /**
     * `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Optional.
     */
    readonly kmsEncrypted?: pulumi.Input<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is `true`.
     */
    readonly kmsKey?: pulumi.Input<string>;
    /**
     * Logical disk number.
     */
    readonly lunNumber?: pulumi.Input<number>;
    /**
     * The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.
     */
    readonly networkInterfaceId?: pulumi.Input<string>;
    /**
     * The port used to communicate with iSCSI targets.
     */
    readonly networkInterfacePort?: pulumi.Input<number>;
    /**
     * Specify this field as `true` if you want to preserve the data on the local disk. Otherwise, specifying this field as false creates an empty volume.
     */
    readonly preserveExistingData?: pulumi.Input<boolean>;
    /**
     * The snapshot ID of the snapshot to restore as the new stored volume. e.g. `snap-1122aabb`.
     */
    readonly snapshotId?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags
     */
    readonly tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Target Amazon Resource Name (ARN), e.g. `arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678/target/iqn.1997-05.com.amazon:TargetName`.
     */
    readonly targetArn?: pulumi.Input<string>;
    /**
     * The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.
     */
    readonly targetName?: pulumi.Input<string>;
    /**
     * A value that indicates whether a storage volume is attached to, detached from, or is in the process of detaching from a gateway.
     */
    readonly volumeAttachmentStatus?: pulumi.Input<string>;
    /**
     * Volume ID, e.g. `vol-12345678`.
     */
    readonly volumeId?: pulumi.Input<string>;
    /**
     * The size of the data stored on the volume in bytes.
     */
    readonly volumeSizeInBytes?: pulumi.Input<number>;
    /**
     * indicates the state of the storage volume.
     */
    readonly volumeStatus?: pulumi.Input<string>;
    /**
     * indicates the type of the volume.
     */
    readonly volumeType?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a StoredIscsiVolume resource.
 */
export interface StoredIscsiVolumeArgs {
    /**
     * The unique identifier for the gateway local disk that is configured as a stored volume.
     */
    readonly diskId: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the gateway.
     */
    readonly gatewayArn: pulumi.Input<string>;
    /**
     * `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Optional.
     */
    readonly kmsEncrypted?: pulumi.Input<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key used for Amazon S3 server side encryption. This value can only be set when `kmsEncrypted` is `true`.
     */
    readonly kmsKey?: pulumi.Input<string>;
    /**
     * The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.
     */
    readonly networkInterfaceId: pulumi.Input<string>;
    /**
     * Specify this field as `true` if you want to preserve the data on the local disk. Otherwise, specifying this field as false creates an empty volume.
     */
    readonly preserveExistingData: pulumi.Input<boolean>;
    /**
     * The snapshot ID of the snapshot to restore as the new stored volume. e.g. `snap-1122aabb`.
     */
    readonly snapshotId?: pulumi.Input<string>;
    /**
     * Key-value mapping of resource tags
     */
    readonly tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.
     */
    readonly targetName: pulumi.Input<string>;
}
