"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./agent"));
__export(require("./efsLocation"));
__export(require("./locationFsxWindows"));
__export(require("./locationSmb"));
__export(require("./nfsLocation"));
__export(require("./s3location"));
__export(require("./task"));
// Import resources to register:
const agent_1 = require("./agent");
const efsLocation_1 = require("./efsLocation");
const locationFsxWindows_1 = require("./locationFsxWindows");
const locationSmb_1 = require("./locationSmb");
const nfsLocation_1 = require("./nfsLocation");
const s3location_1 = require("./s3location");
const task_1 = require("./task");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:datasync/agent:Agent":
                return new agent_1.Agent(name, undefined, { urn });
            case "aws:datasync/efsLocation:EfsLocation":
                return new efsLocation_1.EfsLocation(name, undefined, { urn });
            case "aws:datasync/locationFsxWindows:LocationFsxWindows":
                return new locationFsxWindows_1.LocationFsxWindows(name, undefined, { urn });
            case "aws:datasync/locationSmb:LocationSmb":
                return new locationSmb_1.LocationSmb(name, undefined, { urn });
            case "aws:datasync/nfsLocation:NfsLocation":
                return new nfsLocation_1.NfsLocation(name, undefined, { urn });
            case "aws:datasync/s3Location:S3Location":
                return new s3location_1.S3Location(name, undefined, { urn });
            case "aws:datasync/task:Task":
                return new task_1.Task(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "datasync/agent", _module);
pulumi.runtime.registerResourceModule("aws", "datasync/efsLocation", _module);
pulumi.runtime.registerResourceModule("aws", "datasync/locationFsxWindows", _module);
pulumi.runtime.registerResourceModule("aws", "datasync/locationSmb", _module);
pulumi.runtime.registerResourceModule("aws", "datasync/nfsLocation", _module);
pulumi.runtime.registerResourceModule("aws", "datasync/s3Location", _module);
pulumi.runtime.registerResourceModule("aws", "datasync/task", _module);
//# sourceMappingURL=index.js.map