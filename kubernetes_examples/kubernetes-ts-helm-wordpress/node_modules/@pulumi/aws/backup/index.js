"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./getPlan"));
__export(require("./getSelection"));
__export(require("./getVault"));
__export(require("./plan"));
__export(require("./regionSettings"));
__export(require("./selection"));
__export(require("./vault"));
__export(require("./vaultNotifications"));
__export(require("./vaultPolicy"));
// Import resources to register:
const plan_1 = require("./plan");
const regionSettings_1 = require("./regionSettings");
const selection_1 = require("./selection");
const vault_1 = require("./vault");
const vaultNotifications_1 = require("./vaultNotifications");
const vaultPolicy_1 = require("./vaultPolicy");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:backup/plan:Plan":
                return new plan_1.Plan(name, undefined, { urn });
            case "aws:backup/regionSettings:RegionSettings":
                return new regionSettings_1.RegionSettings(name, undefined, { urn });
            case "aws:backup/selection:Selection":
                return new selection_1.Selection(name, undefined, { urn });
            case "aws:backup/vault:Vault":
                return new vault_1.Vault(name, undefined, { urn });
            case "aws:backup/vaultNotifications:VaultNotifications":
                return new vaultNotifications_1.VaultNotifications(name, undefined, { urn });
            case "aws:backup/vaultPolicy:VaultPolicy":
                return new vaultPolicy_1.VaultPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "backup/plan", _module);
pulumi.runtime.registerResourceModule("aws", "backup/regionSettings", _module);
pulumi.runtime.registerResourceModule("aws", "backup/selection", _module);
pulumi.runtime.registerResourceModule("aws", "backup/vault", _module);
pulumi.runtime.registerResourceModule("aws", "backup/vaultNotifications", _module);
pulumi.runtime.registerResourceModule("aws", "backup/vaultPolicy", _module);
//# sourceMappingURL=index.js.map