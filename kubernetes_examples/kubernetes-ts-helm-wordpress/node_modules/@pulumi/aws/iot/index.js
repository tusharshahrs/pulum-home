"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./certificate"));
__export(require("./getEndpoint"));
__export(require("./policy"));
__export(require("./policyAttachment"));
__export(require("./roleAlias"));
__export(require("./thing"));
__export(require("./thingPrincipalAttachment"));
__export(require("./thingType"));
__export(require("./topicRule"));
// Import resources to register:
const certificate_1 = require("./certificate");
const policy_1 = require("./policy");
const policyAttachment_1 = require("./policyAttachment");
const roleAlias_1 = require("./roleAlias");
const thing_1 = require("./thing");
const thingPrincipalAttachment_1 = require("./thingPrincipalAttachment");
const thingType_1 = require("./thingType");
const topicRule_1 = require("./topicRule");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:iot/certificate:Certificate":
                return new certificate_1.Certificate(name, undefined, { urn });
            case "aws:iot/policy:Policy":
                return new policy_1.Policy(name, undefined, { urn });
            case "aws:iot/policyAttachment:PolicyAttachment":
                return new policyAttachment_1.PolicyAttachment(name, undefined, { urn });
            case "aws:iot/roleAlias:RoleAlias":
                return new roleAlias_1.RoleAlias(name, undefined, { urn });
            case "aws:iot/thing:Thing":
                return new thing_1.Thing(name, undefined, { urn });
            case "aws:iot/thingPrincipalAttachment:ThingPrincipalAttachment":
                return new thingPrincipalAttachment_1.ThingPrincipalAttachment(name, undefined, { urn });
            case "aws:iot/thingType:ThingType":
                return new thingType_1.ThingType(name, undefined, { urn });
            case "aws:iot/topicRule:TopicRule":
                return new topicRule_1.TopicRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "iot/certificate", _module);
pulumi.runtime.registerResourceModule("aws", "iot/policy", _module);
pulumi.runtime.registerResourceModule("aws", "iot/policyAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "iot/roleAlias", _module);
pulumi.runtime.registerResourceModule("aws", "iot/thing", _module);
pulumi.runtime.registerResourceModule("aws", "iot/thingPrincipalAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "iot/thingType", _module);
pulumi.runtime.registerResourceModule("aws", "iot/topicRule", _module);
//# sourceMappingURL=index.js.map