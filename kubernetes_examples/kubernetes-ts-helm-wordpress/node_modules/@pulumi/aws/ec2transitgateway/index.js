"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./getDirectConnectGatewayAttachment"));
__export(require("./getPeeringAttachment"));
__export(require("./getRouteTable"));
__export(require("./getTransitGateway"));
__export(require("./getVpcAttachment"));
__export(require("./getVpnAttachment"));
__export(require("./peeringAttachment"));
__export(require("./route"));
__export(require("./routeTable"));
__export(require("./routeTableAssociation"));
__export(require("./routeTablePropagation"));
__export(require("./transitGateway"));
__export(require("./vpcAttachment"));
__export(require("./vpcAttachmentAccepter"));
// Import resources to register:
const peeringAttachment_1 = require("./peeringAttachment");
const route_1 = require("./route");
const routeTable_1 = require("./routeTable");
const routeTableAssociation_1 = require("./routeTableAssociation");
const routeTablePropagation_1 = require("./routeTablePropagation");
const transitGateway_1 = require("./transitGateway");
const vpcAttachment_1 = require("./vpcAttachment");
const vpcAttachmentAccepter_1 = require("./vpcAttachmentAccepter");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:ec2transitgateway/peeringAttachment:PeeringAttachment":
                return new peeringAttachment_1.PeeringAttachment(name, undefined, { urn });
            case "aws:ec2transitgateway/route:Route":
                return new route_1.Route(name, undefined, { urn });
            case "aws:ec2transitgateway/routeTable:RouteTable":
                return new routeTable_1.RouteTable(name, undefined, { urn });
            case "aws:ec2transitgateway/routeTableAssociation:RouteTableAssociation":
                return new routeTableAssociation_1.RouteTableAssociation(name, undefined, { urn });
            case "aws:ec2transitgateway/routeTablePropagation:RouteTablePropagation":
                return new routeTablePropagation_1.RouteTablePropagation(name, undefined, { urn });
            case "aws:ec2transitgateway/transitGateway:TransitGateway":
                return new transitGateway_1.TransitGateway(name, undefined, { urn });
            case "aws:ec2transitgateway/vpcAttachment:VpcAttachment":
                return new vpcAttachment_1.VpcAttachment(name, undefined, { urn });
            case "aws:ec2transitgateway/vpcAttachmentAccepter:VpcAttachmentAccepter":
                return new vpcAttachmentAccepter_1.VpcAttachmentAccepter(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "ec2transitgateway/peeringAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "ec2transitgateway/route", _module);
pulumi.runtime.registerResourceModule("aws", "ec2transitgateway/routeTable", _module);
pulumi.runtime.registerResourceModule("aws", "ec2transitgateway/routeTableAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "ec2transitgateway/routeTablePropagation", _module);
pulumi.runtime.registerResourceModule("aws", "ec2transitgateway/transitGateway", _module);
pulumi.runtime.registerResourceModule("aws", "ec2transitgateway/vpcAttachment", _module);
pulumi.runtime.registerResourceModule("aws", "ec2transitgateway/vpcAttachmentAccepter", _module);
//# sourceMappingURL=index.js.map