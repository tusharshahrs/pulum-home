import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to get information about the host when allocating an EC2 Dedicated Host.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = new aws.ec2.DedicatedHost("test", {
 *     autoPlacement: "on",
 *     availabilityZone: "us-west-1a",
 *     hostRecovery: "on",
 *     instanceType: "c5.18xlarge",
 * });
 * const testData = test.id.apply(id => aws.ec2.getDedicatedHost({
 *     hostId: id,
 * }, { async: true }));
 * ```
 */
export declare function getDedicatedHost(args: GetDedicatedHostArgs, opts?: pulumi.InvokeOptions): Promise<GetDedicatedHostResult>;
/**
 * A collection of arguments for invoking getDedicatedHost.
 */
export interface GetDedicatedHostArgs {
    /**
     * The host ID.
     */
    readonly hostId: string;
    readonly tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getDedicatedHost.
 */
export interface GetDedicatedHostResult {
    readonly autoPlacement: string;
    readonly availabilityZone: string;
    /**
     * The number of cores on the Dedicated Host.
     */
    readonly cores: number;
    /**
     * The host ID.
     */
    readonly hostId: string;
    readonly hostRecovery: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The instance family supported by the Dedicated Host. For example, m5.
     * * `instanceType` -The instance type supported by the Dedicated Host. For example, m5.large. If the host supports multiple instance types, no instanceType is returned.
     */
    readonly instanceFamily: string;
    readonly instanceState: string;
    readonly instanceType: string;
    /**
     * The instance family supported by the Dedicated Host. For example, m5.
     */
    readonly sockets: number;
    readonly tags: {
        [key: string]: string;
    };
    /**
     * The total number of vCPUs on the Dedicated Host.
     */
    readonly totalVcpus: number;
}
