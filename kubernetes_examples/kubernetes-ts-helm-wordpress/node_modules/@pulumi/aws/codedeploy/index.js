"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./application"));
__export(require("./deploymentConfig"));
__export(require("./deploymentGroup"));
// Import resources to register:
const application_1 = require("./application");
const deploymentConfig_1 = require("./deploymentConfig");
const deploymentGroup_1 = require("./deploymentGroup");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:codedeploy/application:Application":
                return new application_1.Application(name, undefined, { urn });
            case "aws:codedeploy/deploymentConfig:DeploymentConfig":
                return new deploymentConfig_1.DeploymentConfig(name, undefined, { urn });
            case "aws:codedeploy/deploymentGroup:DeploymentGroup":
                return new deploymentGroup_1.DeploymentGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "codedeploy/application", _module);
pulumi.runtime.registerResourceModule("aws", "codedeploy/deploymentConfig", _module);
pulumi.runtime.registerResourceModule("aws", "codedeploy/deploymentGroup", _module);
//# sourceMappingURL=index.js.map