"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./getListener"));
__export(require("./getLoadBalancer"));
__export(require("./getTargetGroup"));
__export(require("./ipAddressType"));
__export(require("./listener"));
__export(require("./listenerCertificate"));
__export(require("./listenerRule"));
__export(require("./loadBalancer"));
__export(require("./loadBalancerType"));
__export(require("./targetGroup"));
__export(require("./targetGroupAttachment"));
// Export enums:
__export(require("../types/enums/alb"));
// Import resources to register:
const listener_1 = require("./listener");
const listenerCertificate_1 = require("./listenerCertificate");
const listenerRule_1 = require("./listenerRule");
const loadBalancer_1 = require("./loadBalancer");
const targetGroup_1 = require("./targetGroup");
const targetGroupAttachment_1 = require("./targetGroupAttachment");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:alb/listener:Listener":
                return new listener_1.Listener(name, undefined, { urn });
            case "aws:alb/listenerCertificate:ListenerCertificate":
                return new listenerCertificate_1.ListenerCertificate(name, undefined, { urn });
            case "aws:alb/listenerRule:ListenerRule":
                return new listenerRule_1.ListenerRule(name, undefined, { urn });
            case "aws:alb/loadBalancer:LoadBalancer":
                return new loadBalancer_1.LoadBalancer(name, undefined, { urn });
            case "aws:alb/targetGroup:TargetGroup":
                return new targetGroup_1.TargetGroup(name, undefined, { urn });
            case "aws:alb/targetGroupAttachment:TargetGroupAttachment":
                return new targetGroupAttachment_1.TargetGroupAttachment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "alb/listener", _module);
pulumi.runtime.registerResourceModule("aws", "alb/listenerCertificate", _module);
pulumi.runtime.registerResourceModule("aws", "alb/listenerRule", _module);
pulumi.runtime.registerResourceModule("aws", "alb/loadBalancer", _module);
pulumi.runtime.registerResourceModule("aws", "alb/targetGroup", _module);
pulumi.runtime.registerResourceModule("aws", "alb/targetGroupAttachment", _module);
//# sourceMappingURL=index.js.map