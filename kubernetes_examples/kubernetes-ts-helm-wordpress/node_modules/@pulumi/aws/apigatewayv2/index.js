"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./api"));
__export(require("./apiMapping"));
__export(require("./authorizer"));
__export(require("./deployment"));
__export(require("./domainName"));
__export(require("./integration"));
__export(require("./integrationResponse"));
__export(require("./model"));
__export(require("./route"));
__export(require("./routeResponse"));
__export(require("./stage"));
__export(require("./vpcLink"));
// Import resources to register:
const api_1 = require("./api");
const apiMapping_1 = require("./apiMapping");
const authorizer_1 = require("./authorizer");
const deployment_1 = require("./deployment");
const domainName_1 = require("./domainName");
const integration_1 = require("./integration");
const integrationResponse_1 = require("./integrationResponse");
const model_1 = require("./model");
const route_1 = require("./route");
const routeResponse_1 = require("./routeResponse");
const stage_1 = require("./stage");
const vpcLink_1 = require("./vpcLink");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:apigatewayv2/api:Api":
                return new api_1.Api(name, undefined, { urn });
            case "aws:apigatewayv2/apiMapping:ApiMapping":
                return new apiMapping_1.ApiMapping(name, undefined, { urn });
            case "aws:apigatewayv2/authorizer:Authorizer":
                return new authorizer_1.Authorizer(name, undefined, { urn });
            case "aws:apigatewayv2/deployment:Deployment":
                return new deployment_1.Deployment(name, undefined, { urn });
            case "aws:apigatewayv2/domainName:DomainName":
                return new domainName_1.DomainName(name, undefined, { urn });
            case "aws:apigatewayv2/integration:Integration":
                return new integration_1.Integration(name, undefined, { urn });
            case "aws:apigatewayv2/integrationResponse:IntegrationResponse":
                return new integrationResponse_1.IntegrationResponse(name, undefined, { urn });
            case "aws:apigatewayv2/model:Model":
                return new model_1.Model(name, undefined, { urn });
            case "aws:apigatewayv2/route:Route":
                return new route_1.Route(name, undefined, { urn });
            case "aws:apigatewayv2/routeResponse:RouteResponse":
                return new routeResponse_1.RouteResponse(name, undefined, { urn });
            case "aws:apigatewayv2/stage:Stage":
                return new stage_1.Stage(name, undefined, { urn });
            case "aws:apigatewayv2/vpcLink:VpcLink":
                return new vpcLink_1.VpcLink(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/api", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/apiMapping", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/authorizer", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/deployment", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/domainName", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/integration", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/integrationResponse", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/model", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/route", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/routeResponse", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/stage", _module);
pulumi.runtime.registerResourceModule("aws", "apigatewayv2/vpcLink", _module);
//# sourceMappingURL=index.js.map