"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./accessPoint"));
__export(require("./accountPublicAccessBlock"));
__export(require("./analyticsConfiguration"));
__export(require("./bucket"));
__export(require("./bucketMetric"));
__export(require("./bucketNotification"));
__export(require("./bucketObject"));
__export(require("./bucketOwnershipControls"));
__export(require("./bucketPolicy"));
__export(require("./bucketPublicAccessBlock"));
__export(require("./cannedAcl"));
__export(require("./getBucket"));
__export(require("./getBucketObject"));
__export(require("./getBucketObjects"));
__export(require("./inventory"));
__export(require("./s3Mixins"));
// Export enums:
__export(require("../types/enums/s3"));
// Import resources to register:
const accessPoint_1 = require("./accessPoint");
const accountPublicAccessBlock_1 = require("./accountPublicAccessBlock");
const analyticsConfiguration_1 = require("./analyticsConfiguration");
const bucket_1 = require("./bucket");
const bucketMetric_1 = require("./bucketMetric");
const bucketNotification_1 = require("./bucketNotification");
const bucketObject_1 = require("./bucketObject");
const bucketOwnershipControls_1 = require("./bucketOwnershipControls");
const bucketPolicy_1 = require("./bucketPolicy");
const bucketPublicAccessBlock_1 = require("./bucketPublicAccessBlock");
const inventory_1 = require("./inventory");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:s3/accessPoint:AccessPoint":
                return new accessPoint_1.AccessPoint(name, undefined, { urn });
            case "aws:s3/accountPublicAccessBlock:AccountPublicAccessBlock":
                return new accountPublicAccessBlock_1.AccountPublicAccessBlock(name, undefined, { urn });
            case "aws:s3/analyticsConfiguration:AnalyticsConfiguration":
                return new analyticsConfiguration_1.AnalyticsConfiguration(name, undefined, { urn });
            case "aws:s3/bucket:Bucket":
                return new bucket_1.Bucket(name, undefined, { urn });
            case "aws:s3/bucketMetric:BucketMetric":
                return new bucketMetric_1.BucketMetric(name, undefined, { urn });
            case "aws:s3/bucketNotification:BucketNotification":
                return new bucketNotification_1.BucketNotification(name, undefined, { urn });
            case "aws:s3/bucketObject:BucketObject":
                return new bucketObject_1.BucketObject(name, undefined, { urn });
            case "aws:s3/bucketOwnershipControls:BucketOwnershipControls":
                return new bucketOwnershipControls_1.BucketOwnershipControls(name, undefined, { urn });
            case "aws:s3/bucketPolicy:BucketPolicy":
                return new bucketPolicy_1.BucketPolicy(name, undefined, { urn });
            case "aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock":
                return new bucketPublicAccessBlock_1.BucketPublicAccessBlock(name, undefined, { urn });
            case "aws:s3/inventory:Inventory":
                return new inventory_1.Inventory(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "s3/accessPoint", _module);
pulumi.runtime.registerResourceModule("aws", "s3/accountPublicAccessBlock", _module);
pulumi.runtime.registerResourceModule("aws", "s3/analyticsConfiguration", _module);
pulumi.runtime.registerResourceModule("aws", "s3/bucket", _module);
pulumi.runtime.registerResourceModule("aws", "s3/bucketMetric", _module);
pulumi.runtime.registerResourceModule("aws", "s3/bucketNotification", _module);
pulumi.runtime.registerResourceModule("aws", "s3/bucketObject", _module);
pulumi.runtime.registerResourceModule("aws", "s3/bucketOwnershipControls", _module);
pulumi.runtime.registerResourceModule("aws", "s3/bucketPolicy", _module);
pulumi.runtime.registerResourceModule("aws", "s3/bucketPublicAccessBlock", _module);
pulumi.runtime.registerResourceModule("aws", "s3/inventory", _module);
//# sourceMappingURL=index.js.map