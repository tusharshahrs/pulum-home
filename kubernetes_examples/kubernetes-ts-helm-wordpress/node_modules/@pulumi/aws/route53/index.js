"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
// Export members:
__export(require("./delegationSet"));
__export(require("./getDelegationSet"));
__export(require("./getResolverEndpoint"));
__export(require("./getResolverRule"));
__export(require("./getResolverRules"));
__export(require("./getZone"));
__export(require("./healthCheck"));
__export(require("./queryLog"));
__export(require("./record"));
__export(require("./recordType"));
__export(require("./resolverEndpoint"));
__export(require("./resolverQueryLogConfig"));
__export(require("./resolverQueryLogConfigAssociation"));
__export(require("./resolverRule"));
__export(require("./resolverRuleAssociation"));
__export(require("./vpcAssociationAuthorization"));
__export(require("./zone"));
__export(require("./zoneAssociation"));
// Export enums:
__export(require("../types/enums/route53"));
// Import resources to register:
const delegationSet_1 = require("./delegationSet");
const healthCheck_1 = require("./healthCheck");
const queryLog_1 = require("./queryLog");
const record_1 = require("./record");
const resolverEndpoint_1 = require("./resolverEndpoint");
const resolverQueryLogConfig_1 = require("./resolverQueryLogConfig");
const resolverQueryLogConfigAssociation_1 = require("./resolverQueryLogConfigAssociation");
const resolverRule_1 = require("./resolverRule");
const resolverRuleAssociation_1 = require("./resolverRuleAssociation");
const vpcAssociationAuthorization_1 = require("./vpcAssociationAuthorization");
const zone_1 = require("./zone");
const zoneAssociation_1 = require("./zoneAssociation");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws:route53/delegationSet:DelegationSet":
                return new delegationSet_1.DelegationSet(name, undefined, { urn });
            case "aws:route53/healthCheck:HealthCheck":
                return new healthCheck_1.HealthCheck(name, undefined, { urn });
            case "aws:route53/queryLog:QueryLog":
                return new queryLog_1.QueryLog(name, undefined, { urn });
            case "aws:route53/record:Record":
                return new record_1.Record(name, undefined, { urn });
            case "aws:route53/resolverEndpoint:ResolverEndpoint":
                return new resolverEndpoint_1.ResolverEndpoint(name, undefined, { urn });
            case "aws:route53/resolverQueryLogConfig:ResolverQueryLogConfig":
                return new resolverQueryLogConfig_1.ResolverQueryLogConfig(name, undefined, { urn });
            case "aws:route53/resolverQueryLogConfigAssociation:ResolverQueryLogConfigAssociation":
                return new resolverQueryLogConfigAssociation_1.ResolverQueryLogConfigAssociation(name, undefined, { urn });
            case "aws:route53/resolverRule:ResolverRule":
                return new resolverRule_1.ResolverRule(name, undefined, { urn });
            case "aws:route53/resolverRuleAssociation:ResolverRuleAssociation":
                return new resolverRuleAssociation_1.ResolverRuleAssociation(name, undefined, { urn });
            case "aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization":
                return new vpcAssociationAuthorization_1.VpcAssociationAuthorization(name, undefined, { urn });
            case "aws:route53/zone:Zone":
                return new zone_1.Zone(name, undefined, { urn });
            case "aws:route53/zoneAssociation:ZoneAssociation":
                return new zoneAssociation_1.ZoneAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws", "route53/delegationSet", _module);
pulumi.runtime.registerResourceModule("aws", "route53/healthCheck", _module);
pulumi.runtime.registerResourceModule("aws", "route53/queryLog", _module);
pulumi.runtime.registerResourceModule("aws", "route53/record", _module);
pulumi.runtime.registerResourceModule("aws", "route53/resolverEndpoint", _module);
pulumi.runtime.registerResourceModule("aws", "route53/resolverQueryLogConfig", _module);
pulumi.runtime.registerResourceModule("aws", "route53/resolverQueryLogConfigAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "route53/resolverRule", _module);
pulumi.runtime.registerResourceModule("aws", "route53/resolverRuleAssociation", _module);
pulumi.runtime.registerResourceModule("aws", "route53/vpcAssociationAuthorization", _module);
pulumi.runtime.registerResourceModule("aws", "route53/zone", _module);
pulumi.runtime.registerResourceModule("aws", "route53/zoneAssociation", _module);
//# sourceMappingURL=index.js.map