import * as pulumi from "@pulumi/pulumi";
/**
 * Creates a Snapshot of a snapshot.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.ebs.Volume("example", {
 *     availabilityZone: "us-west-2a",
 *     size: 40,
 *     tags: {
 *         Name: "HelloWorld",
 *     },
 * });
 * const exampleSnapshot = new aws.ebs.Snapshot("exampleSnapshot", {
 *     volumeId: example.id,
 *     tags: {
 *         Name: "HelloWorld_snap",
 *     },
 * });
 * const exampleCopy = new aws.ebs.SnapshotCopy("exampleCopy", {
 *     sourceSnapshotId: exampleSnapshot.id,
 *     sourceRegion: "us-west-2",
 *     tags: {
 *         Name: "HelloWorld_copy_snap",
 *     },
 * });
 * ```
 */
export declare class SnapshotCopy extends pulumi.CustomResource {
    /**
     * Get an existing SnapshotCopy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotCopyState, opts?: pulumi.CustomResourceOptions): SnapshotCopy;
    /**
     * Returns true if the given object is an instance of SnapshotCopy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SnapshotCopy;
    /**
     * Amazon Resource Name (ARN) of the EBS Snapshot.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The data encryption key identifier for the snapshot.
     * * `sourceSnapshotId` The ARN of the copied snapshot.
     * * `sourceRegion` The region of the source snapshot.
     */
    readonly dataEncryptionKeyId: pulumi.Output<string>;
    /**
     * A description of what the snapshot is.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Whether the snapshot is encrypted.
     */
    readonly encrypted: pulumi.Output<boolean | undefined>;
    /**
     * The ARN for the KMS encryption key.
     */
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    /**
     * Value from an Amazon-maintained list (`amazon`, `aws-marketplace`, `microsoft`) of snapshot owners.
     */
    readonly ownerAlias: pulumi.Output<string>;
    /**
     * The AWS account ID of the snapshot owner.
     */
    readonly ownerId: pulumi.Output<string>;
    /**
     * The region of the source snapshot.
     */
    readonly sourceRegion: pulumi.Output<string>;
    /**
     * The ARN for the snapshot to be copied.
     */
    readonly sourceSnapshotId: pulumi.Output<string>;
    /**
     * A map of tags for the snapshot.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly volumeId: pulumi.Output<string>;
    /**
     * The size of the drive in GiBs.
     */
    readonly volumeSize: pulumi.Output<number>;
    /**
     * Create a SnapshotCopy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotCopyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SnapshotCopy resources.
 */
export interface SnapshotCopyState {
    /**
     * Amazon Resource Name (ARN) of the EBS Snapshot.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The data encryption key identifier for the snapshot.
     * * `sourceSnapshotId` The ARN of the copied snapshot.
     * * `sourceRegion` The region of the source snapshot.
     */
    readonly dataEncryptionKeyId?: pulumi.Input<string>;
    /**
     * A description of what the snapshot is.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Whether the snapshot is encrypted.
     */
    readonly encrypted?: pulumi.Input<boolean>;
    /**
     * The ARN for the KMS encryption key.
     */
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * Value from an Amazon-maintained list (`amazon`, `aws-marketplace`, `microsoft`) of snapshot owners.
     */
    readonly ownerAlias?: pulumi.Input<string>;
    /**
     * The AWS account ID of the snapshot owner.
     */
    readonly ownerId?: pulumi.Input<string>;
    /**
     * The region of the source snapshot.
     */
    readonly sourceRegion?: pulumi.Input<string>;
    /**
     * The ARN for the snapshot to be copied.
     */
    readonly sourceSnapshotId?: pulumi.Input<string>;
    /**
     * A map of tags for the snapshot.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    readonly volumeId?: pulumi.Input<string>;
    /**
     * The size of the drive in GiBs.
     */
    readonly volumeSize?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a SnapshotCopy resource.
 */
export interface SnapshotCopyArgs {
    /**
     * A description of what the snapshot is.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Whether the snapshot is encrypted.
     */
    readonly encrypted?: pulumi.Input<boolean>;
    /**
     * The ARN for the KMS encryption key.
     */
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * The region of the source snapshot.
     */
    readonly sourceRegion: pulumi.Input<string>;
    /**
     * The ARN for the snapshot to be copied.
     */
    readonly sourceSnapshotId: pulumi.Input<string>;
    /**
     * A map of tags for the snapshot.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
