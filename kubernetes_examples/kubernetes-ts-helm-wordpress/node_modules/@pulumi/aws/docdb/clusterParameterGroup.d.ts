import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Manages a DocumentDB Cluster Parameter Group
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.docdb.ClusterParameterGroup("example", {
 *     description: "docdb cluster parameter group",
 *     family: "docdb3.6",
 *     parameters: [{
 *         name: "tls",
 *         value: "enabled",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * DocumentDB Cluster Parameter Groups can be imported using the `name`, e.g.
 *
 * ```sh
 *  $ pulumi import aws:docdb/clusterParameterGroup:ClusterParameterGroup cluster_pg production-pg-1
 * ```
 */
export declare class ClusterParameterGroup extends pulumi.CustomResource {
    /**
     * Get an existing ClusterParameterGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterParameterGroupState, opts?: pulumi.CustomResourceOptions): ClusterParameterGroup;
    /**
     * Returns true if the given object is an instance of ClusterParameterGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ClusterParameterGroup;
    /**
     * The ARN of the documentDB cluster parameter group.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The description of the documentDB cluster parameter group. Defaults to "Managed by Pulumi".
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The family of the documentDB cluster parameter group.
     */
    readonly family: pulumi.Output<string>;
    /**
     * The name of the documentDB parameter.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix: pulumi.Output<string>;
    /**
     * A list of documentDB parameters to apply.
     */
    readonly parameters: pulumi.Output<outputs.docdb.ClusterParameterGroupParameter[] | undefined>;
    /**
     * A map of tags to assign to the resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a ClusterParameterGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterParameterGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ClusterParameterGroup resources.
 */
export interface ClusterParameterGroupState {
    /**
     * The ARN of the documentDB cluster parameter group.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * The description of the documentDB cluster parameter group. Defaults to "Managed by Pulumi".
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The family of the documentDB cluster parameter group.
     */
    readonly family?: pulumi.Input<string>;
    /**
     * The name of the documentDB parameter.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * A list of documentDB parameters to apply.
     */
    readonly parameters?: pulumi.Input<pulumi.Input<inputs.docdb.ClusterParameterGroupParameter>[]>;
    /**
     * A map of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
/**
 * The set of arguments for constructing a ClusterParameterGroup resource.
 */
export interface ClusterParameterGroupArgs {
    /**
     * The description of the documentDB cluster parameter group. Defaults to "Managed by Pulumi".
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The family of the documentDB cluster parameter group.
     */
    readonly family: pulumi.Input<string>;
    /**
     * The name of the documentDB parameter.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * A list of documentDB parameters to apply.
     */
    readonly parameters?: pulumi.Input<pulumi.Input<inputs.docdb.ClusterParameterGroupParameter>[]>;
    /**
     * A map of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
