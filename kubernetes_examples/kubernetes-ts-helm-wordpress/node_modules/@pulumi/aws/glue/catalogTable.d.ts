import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
/**
 * Provides a Glue Catalog Table Resource. You can refer to the [Glue Developer Guide](http://docs.aws.amazon.com/glue/latest/dg/populate-data-catalog.html) for a full explanation of the Glue Data Catalog functionality.
 *
 * ## Example Usage
 * ### Basic Table
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const awsGlueCatalogTable = new aws.glue.CatalogTable("aws_glue_catalog_table", {
 *     databaseName: "MyCatalogDatabase",
 *     name: "MyCatalogTable",
 * });
 * ```
 * ### Parquet Table for Athena
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const awsGlueCatalogTable = new aws.glue.CatalogTable("aws_glue_catalog_table", {
 *     databaseName: "MyCatalogDatabase",
 *     name: "MyCatalogTable",
 *     parameters: {
 *         EXTERNAL: "TRUE",
 *         "parquet.compression": "SNAPPY",
 *     },
 *     storageDescriptor: {
 *         columns: [
 *             {
 *                 name: "my_string",
 *                 type: "string",
 *             },
 *             {
 *                 name: "my_double",
 *                 type: "double",
 *             },
 *             {
 *                 comment: "",
 *                 name: "my_date",
 *                 type: "date",
 *             },
 *             {
 *                 comment: "",
 *                 name: "my_bigint",
 *                 type: "bigint",
 *             },
 *             {
 *                 comment: "",
 *                 name: "my_struct",
 *                 type: "struct<my_nested_string:string>",
 *             },
 *         ],
 *         inputFormat: "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
 *         location: "s3://my-bucket/event-streams/my-stream",
 *         outputFormat: "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
 *         serDeInfo: {
 *             name: "my-stream",
 *             parameters: {
 *                 "serialization.format": 1,
 *             },
 *             serializationLibrary: "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
 *         },
 *     },
 *     tableType: "EXTERNAL_TABLE",
 * });
 * ```
 *
 * ## Import
 *
 * Glue Tables can be imported with their catalog ID (usually AWS account ID), database name, and table name, e.g.
 *
 * ```sh
 *  $ pulumi import aws:glue/catalogTable:CatalogTable MyTable 123456789012:MyDatabase:MyTable
 * ```
 */
export declare class CatalogTable extends pulumi.CustomResource {
    /**
     * Get an existing CatalogTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CatalogTableState, opts?: pulumi.CustomResourceOptions): CatalogTable;
    /**
     * Returns true if the given object is an instance of CatalogTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CatalogTable;
    /**
     * The ARN of the Glue Table.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
     */
    readonly catalogId: pulumi.Output<string>;
    /**
     * Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
     */
    readonly databaseName: pulumi.Output<string>;
    /**
     * Description of the table.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Name of the SerDe.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Owner of the table.
     */
    readonly owner: pulumi.Output<string | undefined>;
    /**
     * A map of initialization parameters for the SerDe, in key-value form.
     */
    readonly parameters: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * A list of partition indexes. see Partition Index below.
     */
    readonly partitionIndices: pulumi.Output<outputs.glue.CatalogTablePartitionIndex[] | undefined>;
    /**
     * A list of columns by which the table is partitioned. Only primitive types are supported as partition keys. see Partition Keys below.
     */
    readonly partitionKeys: pulumi.Output<outputs.glue.CatalogTablePartitionKey[] | undefined>;
    /**
     * Retention time for this table.
     */
    readonly retention: pulumi.Output<number | undefined>;
    /**
     * A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
     */
    readonly storageDescriptor: pulumi.Output<outputs.glue.CatalogTableStorageDescriptor | undefined>;
    /**
     * The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.). While optional, some Athena DDL queries such as `ALTER TABLE` and `SHOW CREATE TABLE` will fail if this argument is empty.
     */
    readonly tableType: pulumi.Output<string | undefined>;
    /**
     * If the table is a view, the expanded text of the view; otherwise null.
     */
    readonly viewExpandedText: pulumi.Output<string | undefined>;
    /**
     * If the table is a view, the original text of the view; otherwise null.
     */
    readonly viewOriginalText: pulumi.Output<string | undefined>;
    /**
     * Create a CatalogTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CatalogTableArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CatalogTable resources.
 */
export interface CatalogTableState {
    /**
     * The ARN of the Glue Table.
     */
    readonly arn?: pulumi.Input<string>;
    /**
     * ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
     */
    readonly catalogId?: pulumi.Input<string>;
    /**
     * Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
     */
    readonly databaseName?: pulumi.Input<string>;
    /**
     * Description of the table.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Name of the SerDe.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Owner of the table.
     */
    readonly owner?: pulumi.Input<string>;
    /**
     * A map of initialization parameters for the SerDe, in key-value form.
     */
    readonly parameters?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A list of partition indexes. see Partition Index below.
     */
    readonly partitionIndices?: pulumi.Input<pulumi.Input<inputs.glue.CatalogTablePartitionIndex>[]>;
    /**
     * A list of columns by which the table is partitioned. Only primitive types are supported as partition keys. see Partition Keys below.
     */
    readonly partitionKeys?: pulumi.Input<pulumi.Input<inputs.glue.CatalogTablePartitionKey>[]>;
    /**
     * Retention time for this table.
     */
    readonly retention?: pulumi.Input<number>;
    /**
     * A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
     */
    readonly storageDescriptor?: pulumi.Input<inputs.glue.CatalogTableStorageDescriptor>;
    /**
     * The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.). While optional, some Athena DDL queries such as `ALTER TABLE` and `SHOW CREATE TABLE` will fail if this argument is empty.
     */
    readonly tableType?: pulumi.Input<string>;
    /**
     * If the table is a view, the expanded text of the view; otherwise null.
     */
    readonly viewExpandedText?: pulumi.Input<string>;
    /**
     * If the table is a view, the original text of the view; otherwise null.
     */
    readonly viewOriginalText?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CatalogTable resource.
 */
export interface CatalogTableArgs {
    /**
     * ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
     */
    readonly catalogId?: pulumi.Input<string>;
    /**
     * Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
     */
    readonly databaseName: pulumi.Input<string>;
    /**
     * Description of the table.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Name of the SerDe.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Owner of the table.
     */
    readonly owner?: pulumi.Input<string>;
    /**
     * A map of initialization parameters for the SerDe, in key-value form.
     */
    readonly parameters?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A list of partition indexes. see Partition Index below.
     */
    readonly partitionIndices?: pulumi.Input<pulumi.Input<inputs.glue.CatalogTablePartitionIndex>[]>;
    /**
     * A list of columns by which the table is partitioned. Only primitive types are supported as partition keys. see Partition Keys below.
     */
    readonly partitionKeys?: pulumi.Input<pulumi.Input<inputs.glue.CatalogTablePartitionKey>[]>;
    /**
     * Retention time for this table.
     */
    readonly retention?: pulumi.Input<number>;
    /**
     * A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
     */
    readonly storageDescriptor?: pulumi.Input<inputs.glue.CatalogTableStorageDescriptor>;
    /**
     * The type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.). While optional, some Athena DDL queries such as `ALTER TABLE` and `SHOW CREATE TABLE` will fail if this argument is empty.
     */
    readonly tableType?: pulumi.Input<string>;
    /**
     * If the table is a view, the expanded text of the view; otherwise null.
     */
    readonly viewExpandedText?: pulumi.Input<string>;
    /**
     * If the table is a view, the original text of the view; otherwise null.
     */
    readonly viewOriginalText?: pulumi.Input<string>;
}
