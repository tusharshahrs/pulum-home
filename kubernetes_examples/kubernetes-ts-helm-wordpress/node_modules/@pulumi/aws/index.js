"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
__export(require("./getAmi"));
__export(require("./getAmiIds"));
__export(require("./getArn"));
__export(require("./getAutoscalingGroups"));
__export(require("./getAvailabilityZone"));
__export(require("./getAvailabilityZones"));
__export(require("./getBillingServiceAccount"));
__export(require("./getCallerIdentity"));
__export(require("./getCanonicalUserId"));
__export(require("./getElasticIp"));
__export(require("./getIpRanges"));
__export(require("./getPartition"));
__export(require("./getPrefixList"));
__export(require("./getRegion"));
__export(require("./getRegions"));
__export(require("./provider"));
__export(require("./region"));
__export(require("./utils"));
// Export enums:
__export(require("./types/enums"));
// Export sub-modules:
const accessanalyzer = require("./accessanalyzer");
exports.accessanalyzer = accessanalyzer;
const acm = require("./acm");
exports.acm = acm;
const acmpca = require("./acmpca");
exports.acmpca = acmpca;
const alb = require("./alb");
exports.alb = alb;
const apigateway = require("./apigateway");
exports.apigateway = apigateway;
const apigatewayv2 = require("./apigatewayv2");
exports.apigatewayv2 = apigatewayv2;
const appautoscaling = require("./appautoscaling");
exports.appautoscaling = appautoscaling;
const applicationloadbalancing = require("./applicationloadbalancing");
exports.applicationloadbalancing = applicationloadbalancing;
const appmesh = require("./appmesh");
exports.appmesh = appmesh;
const appsync = require("./appsync");
exports.appsync = appsync;
const athena = require("./athena");
exports.athena = athena;
const autoscaling = require("./autoscaling");
exports.autoscaling = autoscaling;
const autoscalingplans = require("./autoscalingplans");
exports.autoscalingplans = autoscalingplans;
const backup = require("./backup");
exports.backup = backup;
const batch = require("./batch");
exports.batch = batch;
const budgets = require("./budgets");
exports.budgets = budgets;
const cfg = require("./cfg");
exports.cfg = cfg;
const cloud9 = require("./cloud9");
exports.cloud9 = cloud9;
const cloudformation = require("./cloudformation");
exports.cloudformation = cloudformation;
const cloudfront = require("./cloudfront");
exports.cloudfront = cloudfront;
const cloudhsmv2 = require("./cloudhsmv2");
exports.cloudhsmv2 = cloudhsmv2;
const cloudtrail = require("./cloudtrail");
exports.cloudtrail = cloudtrail;
const cloudwatch = require("./cloudwatch");
exports.cloudwatch = cloudwatch;
const codeartifact = require("./codeartifact");
exports.codeartifact = codeartifact;
const codebuild = require("./codebuild");
exports.codebuild = codebuild;
const codecommit = require("./codecommit");
exports.codecommit = codecommit;
const codedeploy = require("./codedeploy");
exports.codedeploy = codedeploy;
const codepipeline = require("./codepipeline");
exports.codepipeline = codepipeline;
const codestarnotifications = require("./codestarnotifications");
exports.codestarnotifications = codestarnotifications;
const cognito = require("./cognito");
exports.cognito = cognito;
const config = require("./config");
exports.config = config;
const cur = require("./cur");
exports.cur = cur;
const datapipeline = require("./datapipeline");
exports.datapipeline = datapipeline;
const datasync = require("./datasync");
exports.datasync = datasync;
const dax = require("./dax");
exports.dax = dax;
const devicefarm = require("./devicefarm");
exports.devicefarm = devicefarm;
const directconnect = require("./directconnect");
exports.directconnect = directconnect;
const directoryservice = require("./directoryservice");
exports.directoryservice = directoryservice;
const dlm = require("./dlm");
exports.dlm = dlm;
const dms = require("./dms");
exports.dms = dms;
const docdb = require("./docdb");
exports.docdb = docdb;
const dynamodb = require("./dynamodb");
exports.dynamodb = dynamodb;
const ebs = require("./ebs");
exports.ebs = ebs;
const ec2 = require("./ec2");
exports.ec2 = ec2;
const ec2clientvpn = require("./ec2clientvpn");
exports.ec2clientvpn = ec2clientvpn;
const ec2transitgateway = require("./ec2transitgateway");
exports.ec2transitgateway = ec2transitgateway;
const ecr = require("./ecr");
exports.ecr = ecr;
const ecs = require("./ecs");
exports.ecs = ecs;
const efs = require("./efs");
exports.efs = efs;
const eks = require("./eks");
exports.eks = eks;
const elasticache = require("./elasticache");
exports.elasticache = elasticache;
const elasticbeanstalk = require("./elasticbeanstalk");
exports.elasticbeanstalk = elasticbeanstalk;
const elasticloadbalancing = require("./elasticloadbalancing");
exports.elasticloadbalancing = elasticloadbalancing;
const elasticloadbalancingv2 = require("./elasticloadbalancingv2");
exports.elasticloadbalancingv2 = elasticloadbalancingv2;
const elasticsearch = require("./elasticsearch");
exports.elasticsearch = elasticsearch;
const elastictranscoder = require("./elastictranscoder");
exports.elastictranscoder = elastictranscoder;
const elb = require("./elb");
exports.elb = elb;
const emr = require("./emr");
exports.emr = emr;
const fms = require("./fms");
exports.fms = fms;
const fsx = require("./fsx");
exports.fsx = fsx;
const gamelift = require("./gamelift");
exports.gamelift = gamelift;
const glacier = require("./glacier");
exports.glacier = glacier;
const globalaccelerator = require("./globalaccelerator");
exports.globalaccelerator = globalaccelerator;
const glue = require("./glue");
exports.glue = glue;
const guardduty = require("./guardduty");
exports.guardduty = guardduty;
const iam = require("./iam");
exports.iam = iam;
const imagebuilder = require("./imagebuilder");
exports.imagebuilder = imagebuilder;
const inspector = require("./inspector");
exports.inspector = inspector;
const iot = require("./iot");
exports.iot = iot;
const kinesis = require("./kinesis");
exports.kinesis = kinesis;
const kinesisanalyticsv2 = require("./kinesisanalyticsv2");
exports.kinesisanalyticsv2 = kinesisanalyticsv2;
const kms = require("./kms");
exports.kms = kms;
const lambda = require("./lambda");
exports.lambda = lambda;
const lb = require("./lb");
exports.lb = lb;
const lex = require("./lex");
exports.lex = lex;
const licensemanager = require("./licensemanager");
exports.licensemanager = licensemanager;
const lightsail = require("./lightsail");
exports.lightsail = lightsail;
const macie = require("./macie");
exports.macie = macie;
const mediaconvert = require("./mediaconvert");
exports.mediaconvert = mediaconvert;
const mediapackage = require("./mediapackage");
exports.mediapackage = mediapackage;
const mediastore = require("./mediastore");
exports.mediastore = mediastore;
const mq = require("./mq");
exports.mq = mq;
const msk = require("./msk");
exports.msk = msk;
const neptune = require("./neptune");
exports.neptune = neptune;
const networkfirewall = require("./networkfirewall");
exports.networkfirewall = networkfirewall;
const opsworks = require("./opsworks");
exports.opsworks = opsworks;
const organizations = require("./organizations");
exports.organizations = organizations;
const outposts = require("./outposts");
exports.outposts = outposts;
const pinpoint = require("./pinpoint");
exports.pinpoint = pinpoint;
const pricing = require("./pricing");
exports.pricing = pricing;
const qldb = require("./qldb");
exports.qldb = qldb;
const quicksight = require("./quicksight");
exports.quicksight = quicksight;
const ram = require("./ram");
exports.ram = ram;
const rds = require("./rds");
exports.rds = rds;
const redshift = require("./redshift");
exports.redshift = redshift;
const resourcegroups = require("./resourcegroups");
exports.resourcegroups = resourcegroups;
const route53 = require("./route53");
exports.route53 = route53;
const s3 = require("./s3");
exports.s3 = s3;
const s3control = require("./s3control");
exports.s3control = s3control;
const s3outposts = require("./s3outposts");
exports.s3outposts = s3outposts;
const sagemaker = require("./sagemaker");
exports.sagemaker = sagemaker;
const secretsmanager = require("./secretsmanager");
exports.secretsmanager = secretsmanager;
const securityhub = require("./securityhub");
exports.securityhub = securityhub;
const serverless = require("./serverless");
exports.serverless = serverless;
const servicecatalog = require("./servicecatalog");
exports.servicecatalog = servicecatalog;
const servicediscovery = require("./servicediscovery");
exports.servicediscovery = servicediscovery;
const servicequotas = require("./servicequotas");
exports.servicequotas = servicequotas;
const ses = require("./ses");
exports.ses = ses;
const sfn = require("./sfn");
exports.sfn = sfn;
const shield = require("./shield");
exports.shield = shield;
const signer = require("./signer");
exports.signer = signer;
const simpledb = require("./simpledb");
exports.simpledb = simpledb;
const sns = require("./sns");
exports.sns = sns;
const sqs = require("./sqs");
exports.sqs = sqs;
const ssm = require("./ssm");
exports.ssm = ssm;
const storagegateway = require("./storagegateway");
exports.storagegateway = storagegateway;
const swf = require("./swf");
exports.swf = swf;
const transfer = require("./transfer");
exports.transfer = transfer;
const types = require("./types");
exports.types = types;
const waf = require("./waf");
exports.waf = waf;
const wafregional = require("./wafregional");
exports.wafregional = wafregional;
const wafv2 = require("./wafv2");
exports.wafv2 = wafv2;
const worklink = require("./worklink");
exports.worklink = worklink;
const workspaces = require("./workspaces");
exports.workspaces = workspaces;
const xray = require("./xray");
exports.xray = xray;
const provider_1 = require("./provider");
pulumi.runtime.registerResourcePackage("aws", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:aws") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map