import * as pulumi from "@pulumi/pulumi";
/**
 * Information about Redshift Orderable Clusters and valid parameter combinations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const test = pulumi.output(aws.redshift.getOrderableCluster({
 *     clusterType: "multi-node",
 *     preferredNodeTypes: [
 *         "dc2.large",
 *         "ds2.xlarge",
 *     ],
 * }, { async: true }));
 * ```
 */
export declare function getOrderableCluster(args?: GetOrderableClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetOrderableClusterResult>;
/**
 * A collection of arguments for invoking getOrderableCluster.
 */
export interface GetOrderableClusterArgs {
    /**
     * Reshift Cluster type. e.g. `multi-node` or `single-node`
     */
    readonly clusterType?: string;
    /**
     * Redshift Cluster version. e.g. `1.0`
     */
    readonly clusterVersion?: string;
    /**
     * Redshift Cluster node type. e.g. `dc2.8xlarge`
     */
    readonly nodeType?: string;
    /**
     * Ordered list of preferred Redshift Cluster node types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
     */
    readonly preferredNodeTypes?: string[];
}
/**
 * A collection of values returned by getOrderableCluster.
 */
export interface GetOrderableClusterResult {
    /**
     * List of Availability Zone names where the Redshit Cluster is available.
     */
    readonly availabilityZones: string[];
    readonly clusterType: string;
    readonly clusterVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nodeType: string;
    readonly preferredNodeTypes?: string[];
}
